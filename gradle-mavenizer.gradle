apply plugin: 'maven-publish'

def gradlePluginVersion = project.hasProperty('mavPluginVersion') ? project.mavPluginVersion : 'master'
apply from: "https://raw.githubusercontent.com/diyalog-im/gradle-maven-plugin/${gradlePluginVersion}/utils.gradle"
apply from: "https://raw.githubusercontent.com/diyalog-im/gradle-maven-plugin/${gradlePluginVersion}/artifact-javadoc-handler.gradle"
apply from: "https://raw.githubusercontent.com/diyalog-im/gradle-maven-plugin/${gradlePluginVersion}/artifact-pom-manager.gradle"

project.afterEvaluate {
    publishing {
        publications {
          def isJavaDocPublishToRepo = project.hasProperty("mavJavaDocPublishToRepo") ? project.getProperty("mavJavaDocPublishToRepo") : true
          def isSourcesPublishToRepo = project.hasProperty("mavSourcesPublishToRepo") ? project.getProperty("mavSourcesPublishToRepo") : true
          
            mavenPublish(MavenPublication) {
                if (isAndroidProject()) {
                    
                    artifact bundleReleaseAar
                      
                    if (isJavaDocPublishToRepo)
                      artifact androidJavadocsJar
                      
                    if (isSourcesPublishToRepo)  
                      artifact androidSourcesJar
                      
                } else {
                    artifact jar

                    if (isJavaDocPublishToRepo)
                      artifact sourcesJar
                      
                    if (isSourcesPublishToRepo)  
                      artifact javadocJar
                }
                
                decoratePom(pom)
            }
        }
        
        repositories {
            def isToRemoteRepo = getBooleanProperty("mavPublishToRemoteRepo")
            def isToInternalRepo = getBooleanProperty("mavPublishToInternalRepo")
            def isToMavenLocal = getBooleanProperty("mavPublishToMavenLocal")

            if (isToRemoteRepo) {
                maven {
                    credentials {
                        username getStringProperty("mavRemoteRepoUser")
                        password getStringProperty("mavRemoteRepoPassword")
                    }
                    url = getStringProperty("mavRepoRemoteUrl")
                }
            }

            if (isToInternalRepo) {
                maven {
                    url = getStringProperty("mavRepoInternalUrl")
                }
            }

            if (isToMavenLocal || (!isToInternalRepo && !isToRemoteRepo)) {
                mavenLocal()
            }
        }
    }
}
